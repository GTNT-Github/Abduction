function init(self)
	msg.post(".", "acquire_input_focus")

	-- Reset Variables
	fight = false
	act = false
	current_button = "item"
	
	-- Disable nodes
	gui.set_enabled(gui.get_node("flicker"), false)
	gui.set_enabled(gui.get_node("act"), false)
	
end


function on_message(self, message_id, message, sender)
	
	-- Enable Fight
	if message_id == hash("enable_fight") then
		enemy_type = enemy_num[enemy]
		gui.set_text(gui.get_node("text_2"), text[text_2[enemy_type]])
		gui.set_text(gui.get_node("text_3"), text[text_3[enemy_type]])
		current_button = "item"
		fight = true
		x= 320
		y= 180
		loop = 0
		flicker_loop = 0
		flicker_enabled = false
		timer.delay(0.2, true, flicker)

	--Disable Fight
	elseif message_id == hash("disable_fight") then
		
		if fight then
			msg.post("/printer", "disable")
			gui.animate(gui.get_node("box"),"scale",vmath.vector3(1,1,1),gui.EASING_LINEAR, 0.4)
			gui.animate(gui.get_node("bottom"), "position", vmath.vector3(0,-510,0), gui.EASING_LINEAR, 0.4)
			sound.stop("/sounds#e")
			camera.follow(camera_id, "/player", {offset = vmath.vector3(0,0,0)})	
			camera.deadzone(camera_id, 320, 180, 320, 180)
			msg.post("/printer", "remove_text")
			camera.set_zoom(camera_id, 1)
			timer.delay(0.4, false, function() fight = false act = false end)
		end

	-- Broadcast final fight messages
	elseif message_id == hash("end_fight_final") then
		msg.post("#", "disable_fight")
		msg.post("/instance" .. enemy-1 , "disable")
		enemy_disabled[enemy_type] = true
	
	-- Show menu when attack is over
	elseif message_id == hash("attack_over") then
		gui.set_enabled(gui.get_node("act"), true)
	end
end


function flicker(self, handle, time_elapsed)
	gui.set_enabled(gui.get_node("talk"), false)
	gui.set_enabled(gui.get_node("item"), false)
	
	-- Fight Flicker
	if flicker_loop < 6 then
		flicker_loop = flicker_loop+1
		
		if flicker_enabled then
			flicker_enabled = false
			gui.set_enabled(gui.get_node("flicker"), false)

		elseif flicker_enabled == false then
			sound.play("/sounds#fight_sound")
			flicker_enabled=true
			gui.set_enabled(gui.get_node("flicker"), true)
			if flicker_loop == 1 then
				camera.set_zoom(camera_id, camera_zoom[enemy_num[enemy]])
				camera.follow(camera_id, "/backend", {offset = vmath.vector3(0,0,0)})
				camera.deadzone(camera_id, 214, 120, 214, 120)
				gui.set_scale(gui.get_node("box"),vmath.vector3(0.9,0.9,0))
				gui.set_position(gui.get_node("bottom"), vmath.vector3(0,-467,0))
				
			elseif flicker_loop == 3 then
				camera.deadzone(camera_id, 107, 60, 107, 60)
				gui.set_scale(gui.get_node("box"),vmath.vector3(0.8,0.8,0))
				gui.set_position(gui.get_node("bottom"), vmath.vector3(0,-424,0))
				
			elseif flicker_loop == 5 then
				camera.deadzone(camera_id, 0, 0, 0, 0)
				gui.set_scale(gui.get_node("box"),vmath.vector3(0.7,0.7,0))
				gui.set_position(gui.get_node("bottom"), vmath.vector3(0,-380,0))
			end
		end
		
	else
		sound.play("/sounds#e")
		timer.cancel(handle)
		msg.post("/printer", "enable")
		msg.post("/printer#printer_example", "printtext", {line = approach[enemy_type], battle = false})
	end
end


function update(self, dt)

	-- Show selected button
	if current_button == "item" then
		gui.set_color(gui.get_node("item"), vmath.vector4(1,0,0,1))
		gui.set_color(gui.get_node("talk"), vmath.vector4(1,0,0,0.5))
	
	else
		gui.set_color(gui.get_node("item"), vmath.vector4(1,0,0,0.5))
		gui.set_color(gui.get_node("talk"), vmath.vector4(1,0,0,1))
	end

	-- Show selected action
	if act then
		gui.set_color(gui.get_node(current_button), vmath.vector4(1,1,1,1))
		gui.set_color(gui.get_node(act_unselected[1]), vmath.vector4(0.4,0.4,0.4,1))
		gui.set_color(gui.get_node(act_unselected[2]), vmath.vector4(0.4,0.4,0.4,1))
		
	-- Disable text 
	else
		gui.set_enabled(gui.get_node("talk"), true)
		gui.set_enabled(gui.get_node("item"), true)
		gui.set_enabled(gui.get_node("act"), false)
	end

	-- Show menu when text stops
	if fight_printer.is_print == false and final_sender == nil then
		act_text = false
		
		if not act then
			gui.set_enabled(gui.get_node("talk"), true)
			gui.set_enabled(gui.get_node("item"), true)
		end
	
	else
		act_text = true
		gui.set_enabled(gui.get_node("act"), false)
		gui.set_enabled(gui.get_node("talk"), false)
		gui.set_enabled(gui.get_node("item"), false)
	end

	gui.set_scale(gui.get_node("HP"), vmath.vector3((HP/100),1,1))
	gui.set_text(gui.get_node("HP_value"), HP.."/100")
	if HP<= 0 and fight then
		sound.stop("/sounds#e")
		msg.post("menu:/menu", "death")
		msg.post("#", "disable")
	end
end

function on_input(self, action_id, action)
	-- Managing menus (Selecting buttons)
	if fight_printer.is_print == false and final_sender == nil then

		if action.pressed then

			if fight then

				if act == false then

					-- Change selected button left
					if action_id == hash("select_left") then

						current_button = "item"
						sound.play("/sounds#select")

					-- Change selected button right
					elseif action_id == hash("select_right") then

						-- Change to talk button
						current_button = "talk"
						sound.play("/sounds#select")

					-- Select button
					elseif action_id == hash("select_enter") then

						if current_button == "talk" then

							sound.play("/sounds#select")
							gui.set_enabled(gui.get_node("talk"), false)
							gui.set_enabled(gui.get_node("item"), false)
							gui.set_enabled(gui.get_node("act"), true)
							act = true
							current_button = "text_1"
							act_unselected = {"text_2","text_3"}
						end
					end

				-- If in act menu
				elseif act then

					-- Move selection up
					if action_id == hash("select_up") then

						sound.play("/sounds#select")
						
						if current_button == "text_2" then
							current_button = "text_1"
							act_unselected = {"text_2","text_3"}
							
						elseif current_button == "text_3" then
							current_button = "text_2"
							act_unselected = {"text_1","text_3"}
						end

					-- Move selection down
					elseif action_id == hash("select_down") then

						sound.play("/sounds#select")
						
						if current_button == "text_2" then
							current_button = "text_3"
							act_unselected = {"text_2","text_1"}
						elseif current_button == "text_1" then
							
							current_button = "text_2"
							act_unselected = {"text_1","text_3"}
						end

					-- Check currently selected button
					elseif action_id == hash("select_enter") then

						if current_button == "text_1" then
							
							sound.play("/sounds#select")
							msg.post("/printer#printer_example", "printtext", {line = stats[enemy_type]})
						end

						if current_button == "text_2" then
							sound.play("/sounds#select")
							
							if spare_text[enemy_type] == 2 then
								msg.post("/printer#printer_example", "printtext_final", {line = text_2_options[enemy_type]})
								
							else
								msg.post("/printer#printer_example", "printtext", {line = text_2_options[enemy_type]})
							end
						end

						if current_button == "text_3" then
							sound.play("/sounds#select")
							
							if spare_text[enemy_type] == 3 then
								msg.post("/printer#printer_example", "printtext_final", {line = text_3_options[enemy_type]})
								
							else
								msg.post("/printer#printer_example", "printtext", {line = text_3_options[enemy_type]})
							end
						end

						

					-- Escape menu
					elseif action_id == hash("esc") then
						sound.play("/sounds#select")
						act = false
						current_button = "act"
					end
				end
			end
		end
	end
end