local timer1


function on_message(self, message_id, message, sender)
    -- Start projectile spawning
    if message_id == hash("attack") then
        if fire_direction[enemy_num[enemy]] == "Circle" then
            for i=1,720  do
                local projectile = factory.create("#projectile", go.get_position("/instance" .. enemy-1), nil, {spare = message.spare,opposite=false,rotation=i})
                msg.post(projectile, "id", {id = enemy_num[enemy]})
            end
        elseif fire_direction[enemy_num[enemy]] == "Spiral" then
            timer1 = timer.delay(0.01, true, function()
                local rotation = go.get("/instance"..enemy-1,"euler.z")
                local projectile = factory.create("#projectile", go.get_position("/instance" .. enemy-1), nil, {spare = message.spare,opposite=false,rotation=rotation})
                msg.post(projectile, "id", {id = enemy_num[enemy]})
            end)

        else
            local projectile = factory.create("#projectile", go.get_position("/instance" .. enemy-1), nil, {spare=message.spare,opposite=false})
            msg.post(projectile, "id", {id = enemy_num[enemy]})
            local projectile = factory.create("#projectile", go.get_position("/instance" .. enemy-1), nil, {spare=message.spare,opposite=true})
            msg.post(projectile, "id", {id = enemy_num[enemy]})
            timer1 = timer.delay(0.5, true, function() 
                local projectile = factory.create("#projectile", go.get_position("/instance" .. enemy-1), nil, {spare=message.spare,opposite=false})
                msg.post(projectile, "id", {id = enemy_num[enemy]})  
                local projectile = factory.create("#projectile", go.get_position("/instance" .. enemy-1), nil, {spare=message.spare,opposite=true})
                msg.post(projectile, "id", {id = enemy_num[enemy]})
            end)
        end

    -- End Projectiles
    elseif message_id == hash("attack_over") then
        if timer1 then
            timer.cancel(timer1)
        end
    end
end